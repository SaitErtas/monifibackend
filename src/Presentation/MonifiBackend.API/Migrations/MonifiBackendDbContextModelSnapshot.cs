// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonifiBackend.Data.Infrastructure.Contexts;

#nullable disable

namespace MonifiBackend.API.Migrations
{
    [DbContext(typeof(MonifiBackendDbContext))]
    partial class MonifiBackendDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.AccountMovementEntity", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<int>("ActionType")
                    .HasColumnType("int");

                b.Property<decimal>("Amount")
                    .HasPrecision(9, 2)
                    .HasColumnType("decimal(9,2)");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Hash")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("ModifiedAt")
                    .HasColumnType("datetime2");

                b.Property<int>("PackageDetailId")
                    .HasColumnType("int");

                b.Property<int>("Status")
                    .HasColumnType("int");

                b.Property<string>("TokenSymbol")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("TransactionStatus")
                    .HasColumnType("int");

                b.Property<DateTime>("TransferTime")
                    .HasColumnType("datetime2");

                b.Property<int>("WalletId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("PackageDetailId");

                b.HasIndex("WalletId");

                b.ToTable("AccountMovements", (string)null);
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.CountryEntity", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Flag")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<string>("Iso2")
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnType("nvarchar(128)");

                b.Property<string>("Iso3")
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnType("nvarchar(128)");

                b.Property<DateTime>("ModifiedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnType("nvarchar(128)");

                b.Property<int>("Status")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.ToTable("Countries", (string)null);
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.LanguageEntity", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("ModifiedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasColumnType("nvarchar(250)");

                b.Property<string>("NativeName")
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasColumnType("nvarchar(250)");

                b.Property<string>("ShortName")
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnType("nvarchar(128)");

                b.Property<int>("Status")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.ToTable("Languages", (string)null);
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.NetworkEntity", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("ModifiedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasColumnType("nvarchar(250)");

                b.Property<int>("Status")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.ToTable("Networks", (string)null);
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.NotificationEntity", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("CustomerName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<bool>("IsRead")
                    .HasColumnType("bit");

                b.Property<string>("Message")
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasColumnType("nvarchar(250)");

                b.Property<DateTime>("ModifiedAt")
                    .HasColumnType("datetime2");

                b.Property<decimal>("Price")
                    .HasColumnType("decimal(18,2)");

                b.Property<int>("Status")
                    .HasColumnType("int");

                b.Property<int>("UserId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("UserId");

                b.ToTable("Notifications", (string)null);
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.PackageDetailEntity", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<int>("Commission")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<int>("Duration")
                    .HasColumnType("int");

                b.Property<DateTime>("ModifiedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnType("nvarchar(128)");

                b.Property<int>("PackageId")
                    .HasColumnType("int");

                b.Property<int>("Status")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("PackageId");

                b.ToTable("PackageDetails", (string)null);
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.PackageEntity", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<int>("Bonus")
                    .HasColumnType("int");

                b.Property<int>("ChangePeriodDay")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Icon")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("MaxValue")
                    .HasColumnType("int");

                b.Property<int>("MinValue")
                    .HasColumnType("int");

                b.Property<DateTime>("ModifiedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnType("nvarchar(128)");

                b.Property<int>("Status")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.ToTable("Packages", (string)null);
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.SettingEntity", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<string>("BscScanAddress")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("BscScanTokenSymbol")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<bool>("MaintenanceMode")
                    .HasColumnType("bit");

                b.Property<long>("MaximumDistributedAPY")
                    .HasColumnType("bigint");

                b.Property<long>("MaximumReferenceBonus")
                    .HasColumnType("bigint");

                b.Property<long>("MaximumSalesQuantity")
                    .HasColumnType("bigint");

                b.Property<DateTime>("ModifiedAt")
                    .HasColumnType("datetime2");

                b.Property<decimal>("MonifiPrice")
                    .HasPrecision(9, 5)
                    .HasColumnType("decimal(9,5)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("Status")
                    .HasColumnType("int");

                b.Property<long>("TotalPreSaleQuantity")
                    .HasColumnType("bigint");

                b.Property<string>("TronNetworkAddress")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("TronNetworkTokenSymbol")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Settings", (string)null);
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.UserEntity", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<string>("Avatar")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("ConfirmationCode")
                    .HasMaxLength(250)
                    .HasColumnType("nvarchar(250)");

                b.Property<int>("CountryId")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnType("nvarchar(128)");

                b.Property<string>("FullName")
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("LanguageId")
                    .HasColumnType("int");

                b.Property<DateTime>("ModifiedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Password")
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnType("nvarchar(128)");

                b.Property<string>("ReferanceCode")
                    .HasMaxLength(250)
                    .HasColumnType("nvarchar(250)");

                b.Property<int>("ReferanceUser")
                    .HasMaxLength(250)
                    .HasColumnType("int");

                b.Property<string>("ResetPasswordCode")
                    .HasMaxLength(250)
                    .HasColumnType("nvarchar(250)");

                b.Property<int>("Role")
                    .HasColumnType("int");

                b.Property<int>("Status")
                    .HasColumnType("int");

                b.Property<bool>("Terms")
                    .HasColumnType("bit");

                b.Property<string>("Username")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.HasIndex("CountryId");

                b.HasIndex("LanguageId");

                b.ToTable("Users", (string)null);
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.UserIPEntity", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("IpAddress")
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasColumnType("nvarchar(250)");

                b.Property<DateTime>("ModifiedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("RequestName")
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasColumnType("nvarchar(250)");

                b.Property<int>("Status")
                    .HasColumnType("int");

                b.Property<int>("UserId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("UserId");

                b.ToTable("UserIPs", (string)null);
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.UserPhoneEntity", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("ModifiedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Number")
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnType("nvarchar(128)");

                b.Property<int>("Status")
                    .HasColumnType("int");

                b.Property<int>("UserId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("UserId");

                b.ToTable("UserPhones", (string)null);
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.VersionDetailEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("VersionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VersionId");

                    b.ToTable("VersionDetails", (string)null);
                });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.VersionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Versions", (string)null);
                });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.WalletEntity", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<int>("CryptoNetworkId")
                    .HasColumnType("int");

                b.Property<DateTime>("ModifiedAt")
                    .HasColumnType("datetime2");

                b.Property<int>("Status")
                    .HasColumnType("int");

                b.Property<int>("UserId")
                    .HasColumnType("int");

                b.Property<string>("WalletAddress")
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasColumnType("nvarchar(250)");

                b.HasKey("Id");

                b.HasIndex("CryptoNetworkId");

                b.HasIndex("UserId")
                    .IsUnique();

                b.ToTable("Wallets", (string)null);
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.AccountMovementEntity", b =>
            {
                b.HasOne("MonifiBackend.Data.Infrastructure.Entities.PackageDetailEntity", "PackageDetail")
                    .WithMany("AccountMovements")
                    .HasForeignKey("PackageDetailId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.HasOne("MonifiBackend.Data.Infrastructure.Entities.WalletEntity", "Wallet")
                    .WithMany("AccountMovements")
                    .HasForeignKey("WalletId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.Navigation("PackageDetail");

                b.Navigation("Wallet");
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.NotificationEntity", b =>
            {
                b.HasOne("MonifiBackend.Data.Infrastructure.Entities.UserEntity", "User")
                    .WithMany("Notifications")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.Navigation("User");
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.PackageDetailEntity", b =>
            {
                b.HasOne("MonifiBackend.Data.Infrastructure.Entities.PackageEntity", "Package")
                    .WithMany("PackageDetails")
                    .HasForeignKey("PackageId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.Navigation("Package");
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.UserEntity", b =>
            {
                b.HasOne("MonifiBackend.Data.Infrastructure.Entities.CountryEntity", "Country")
                    .WithMany("Users")
                    .HasForeignKey("CountryId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.HasOne("MonifiBackend.Data.Infrastructure.Entities.LanguageEntity", "Language")
                    .WithMany("Users")
                    .HasForeignKey("LanguageId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.Navigation("Country");

                b.Navigation("Language");
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.UserIPEntity", b =>
            {
                b.HasOne("MonifiBackend.Data.Infrastructure.Entities.UserEntity", "User")
                    .WithMany("UserIps")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.Navigation("User");
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.UserPhoneEntity", b =>
            {
                b.HasOne("MonifiBackend.Data.Infrastructure.Entities.UserEntity", "User")
                    .WithMany("Phones")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.Navigation("User");
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.VersionDetailEntity", b =>
                {
                    b.HasOne("MonifiBackend.Data.Infrastructure.Entities.VersionEntity", "Version")
                        .WithMany("VersionDetails")
                        .HasForeignKey("VersionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Version");
                });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.WalletEntity", b =>
            {
                b.HasOne("MonifiBackend.Data.Infrastructure.Entities.NetworkEntity", "CryptoNetwork")
                    .WithMany("Wallets")
                    .HasForeignKey("CryptoNetworkId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.HasOne("MonifiBackend.Data.Infrastructure.Entities.UserEntity", "User")
                    .WithOne("Wallet")
                    .HasForeignKey("MonifiBackend.Data.Infrastructure.Entities.WalletEntity", "UserId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.Navigation("CryptoNetwork");

                b.Navigation("User");
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.CountryEntity", b =>
            {
                b.Navigation("Users");
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.LanguageEntity", b =>
            {
                b.Navigation("Users");
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.NetworkEntity", b =>
            {
                b.Navigation("Wallets");
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.PackageDetailEntity", b =>
            {
                b.Navigation("AccountMovements");
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.PackageEntity", b =>
            {
                b.Navigation("PackageDetails");
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.UserEntity", b =>
            {
                b.Navigation("Notifications");

                b.Navigation("Phones");

                b.Navigation("UserIps");

                b.Navigation("Wallet");
            });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.VersionEntity", b =>
                {
                    b.Navigation("VersionDetails");
                });

            modelBuilder.Entity("MonifiBackend.Data.Infrastructure.Entities.WalletEntity", b =>
            {
                b.Navigation("AccountMovements");
            });
#pragma warning restore 612, 618
        }
    }
}